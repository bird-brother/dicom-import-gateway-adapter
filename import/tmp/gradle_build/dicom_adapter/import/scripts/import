#!/usr/bin/env sh

#
# Copyright 2015 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##############################################################################
##
##  import start up script for UN*X
##
##############################################################################

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`/.." >/dev/null
APP_HOME="`pwd -P`"
cd "$SAVED" >/dev/null

APP_NAME="import"
APP_BASE_NAME=`basename "$0"`

# Add default JVM options here. You can also use JAVA_OPTS and IMPORT_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn () {
    echo "$*"
}

die () {
    echo
    echo "$*"
    echo
    exit 1
}

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "`uname`" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    msys=true
    ;;
  NONSTOP* )
    nonstop=true
    ;;
esac

CLASSPATH=$APP_HOME/lib/import-1.0.0.jar:$APP_HOME/lib/logback-core-1.2.3.jar:$APP_HOME/lib/dicom_util-1.0.0.jar:$APP_HOME/lib/google-cloud-nio-0.116.0-alpha.jar:$APP_HOME/lib/google-cloud-storage-1.98.0.jar:$APP_HOME/lib/google-cloud-core-http-1.91.2.jar:$APP_HOME/lib/google-api-services-storage-v1-rev20190910-1.30.3.jar:$APP_HOME/lib/google-api-client-1.30.5.jar:$APP_HOME/lib/google-oauth-client-1.30.4.jar:$APP_HOME/lib/guice-4.1.0.jar:$APP_HOME/lib/util-1.0.0.jar:$APP_HOME/lib/google-cloud-monitoring-1.98.0.jar:$APP_HOME/lib/google-cloud-core-grpc-1.91.2.jar:$APP_HOME/lib/google-cloud-core-1.91.2.jar:$APP_HOME/lib/gax-httpjson-0.66.0.jar:$APP_HOME/lib/gax-grpc-1.49.0.jar:$APP_HOME/lib/gax-1.49.0.jar:$APP_HOME/lib/grpc-alts-1.23.0.jar:$APP_HOME/lib/google-auth-library-oauth2-http-0.17.2.jar:$APP_HOME/lib/google-http-client-jackson2-1.32.1.jar:$APP_HOME/lib/google-http-client-appengine-1.32.1.jar:$APP_HOME/lib/google-http-client-1.32.1.jar:$APP_HOME/lib/opencensus-contrib-http-util-0.24.0.jar:$APP_HOME/lib/proto-google-cloud-monitoring-v3-1.80.0.jar:$APP_HOME/lib/proto-google-iam-v1-0.13.0.jar:$APP_HOME/lib/api-common-1.8.1.jar:$APP_HOME/lib/grpc-grpclb-1.23.0.jar:$APP_HOME/lib/protobuf-java-util-3.10.0.jar:$APP_HOME/lib/grpc-netty-shaded-1.23.0.jar:$APP_HOME/lib/grpc-core-1.24.0.jar:$APP_HOME/lib/grpc-stub-1.23.0.jar:$APP_HOME/lib/grpc-auth-1.23.0.jar:$APP_HOME/lib/grpc-protobuf-1.23.0.jar:$APP_HOME/lib/grpc-protobuf-lite-1.23.0.jar:$APP_HOME/lib/grpc-api-1.24.0.jar:$APP_HOME/lib/guava-28.1-jre.jar:$APP_HOME/lib/jcommander-1.72.jar:$APP_HOME/lib/dcm4che-imageio-opencv-5.18.1.jar:$APP_HOME/lib/weasis-opencv-core-3.5.3.jar:$APP_HOME/lib/dcm4che-net-5.18.1.jar:$APP_HOME/lib/dcm4che-imageio-5.18.1.jar:$APP_HOME/lib/dcm4che-imageio-rle-5.18.1.jar:$APP_HOME/lib/dcm4che-image-5.18.1.jar:$APP_HOME/lib/dcm4che-core-5.18.1.jar:$APP_HOME/lib/deid-redactor-233908ca.jar:$APP_HOME/lib/lombok-1.18.8.jar:$APP_HOME/lib/failureaccess-1.0.1.jar:$APP_HOME/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:$APP_HOME/lib/perfmark-api-0.17.0.jar:$APP_HOME/lib/jsr305-3.0.2.jar:$APP_HOME/lib/checker-qual-2.8.1.jar:$APP_HOME/lib/error_prone_annotations-2.3.2.jar:$APP_HOME/lib/j2objc-annotations-1.3.jar:$APP_HOME/lib/animal-sniffer-annotations-1.18.jar:$APP_HOME/lib/javax.inject-1.jar:$APP_HOME/lib/dcm4che-dict-5.18.1.jar:$APP_HOME/lib/slf4j-log4j12-1.7.25.jar:$APP_HOME/lib/slf4j-api-1.7.25.jar:$APP_HOME/lib/json-20180813.jar:$APP_HOME/lib/junit-4.12.jar:$APP_HOME/lib/junit-jupiter-engine-5.0.0.jar:$APP_HOME/lib/proto-google-common-protos-1.17.0.jar:$APP_HOME/lib/protobuf-java-3.10.0.jar:$APP_HOME/lib/http2-client-9.4.20.v20190813.jar:$APP_HOME/lib/jetty-alpn-java-client-9.4.20.v20190813.jar:$APP_HOME/lib/jackson-core-2.9.9.jar:$APP_HOME/lib/google-auth-library-credentials-0.17.2.jar:$APP_HOME/lib/opencensus-contrib-grpc-metrics-0.21.0.jar:$APP_HOME/lib/opencensus-api-0.24.0.jar:$APP_HOME/lib/log4j-1.2.17.jar:$APP_HOME/lib/hamcrest-core-1.3.jar:$APP_HOME/lib/junit-platform-engine-1.0.0.jar:$APP_HOME/lib/junit-jupiter-api-5.0.0.jar:$APP_HOME/lib/junit-platform-commons-1.0.0.jar:$APP_HOME/lib/apiguardian-api-1.0.0.jar:$APP_HOME/lib/aopalliance-1.0.jar:$APP_HOME/lib/http2-common-9.4.20.v20190813.jar:$APP_HOME/lib/jetty-alpn-client-9.4.20.v20190813.jar:$APP_HOME/lib/httpclient-4.5.10.jar:$APP_HOME/lib/httpcore-4.4.12.jar:$APP_HOME/lib/threetenbp-1.3.3.jar:$APP_HOME/lib/auto-value-annotations-1.6.6.jar:$APP_HOME/lib/gson-2.8.5.jar:$APP_HOME/lib/grpc-context-1.24.0.jar:$APP_HOME/lib/javax.annotation-api-1.3.2.jar:$APP_HOME/lib/opentest4j-1.0.0.jar:$APP_HOME/lib/http2-hpack-9.4.20.v20190813.jar:$APP_HOME/lib/jetty-http-9.4.20.v20190813.jar:$APP_HOME/lib/jetty-io-9.4.20.v20190813.jar:$APP_HOME/lib/commons-logging-1.2.jar:$APP_HOME/lib/commons-codec-1.11.jar:$APP_HOME/lib/jetty-util-9.4.20.v20190813.jar:$APP_HOME/lib/annotations-4.1.1.4.jar:$APP_HOME/lib/commons-lang3-3.5.jar

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD="$JAVA_HOME/jre/sh/java"
    else
        JAVACMD="$JAVA_HOME/bin/java"
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD="java"
    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
fi

# Increase the maximum file descriptors if we can.
if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
    MAX_FD_LIMIT=`ulimit -H -n`
    if [ $? -eq 0 ] ; then
        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
            MAX_FD="$MAX_FD_LIMIT"
        fi
        ulimit -n $MAX_FD
        if [ $? -ne 0 ] ; then
            warn "Could not set maximum file descriptor limit: $MAX_FD"
        fi
    else
        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
    fi
fi

# For Darwin, add options to specify how the application appears in the dock
if $darwin; then
    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
fi

# For Cygwin or MSYS, switch paths to Windows format before running java
if [ "$cygwin" = "true" -o "$msys" = "true" ] ; then
    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
    JAVACMD=`cygpath --unix "$JAVACMD"`

    # We build the pattern for arguments to be converted via cygpath
    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
    SEP=""
    for dir in $ROOTDIRSRAW ; do
        ROOTDIRS="$ROOTDIRS$SEP$dir"
        SEP="|"
    done
    OURCYGPATTERN="(^($ROOTDIRS))"
    # Add a user-defined pattern to the cygpath arguments
    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
    fi
    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    i=0
    for arg in "$@" ; do
        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option

        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
        else
            eval `echo args$i`="\"$arg\""
        fi
        i=`expr $i + 1`
    done
    case $i in
        0) set -- ;;
        1) set -- "$args0" ;;
        2) set -- "$args0" "$args1" ;;
        3) set -- "$args0" "$args1" "$args2" ;;
        4) set -- "$args0" "$args1" "$args2" "$args3" ;;
        5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
        6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
        7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
        8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
        9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
    esac
fi

# Escape application args
save () {
    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
    echo " "
}
APP_ARGS=`save "$@"`

# Collect all arguments for the java command, following the shell quoting and substitution rules
eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $IMPORT_OPTS -classpath "\"$CLASSPATH\"" com.bird.gateway.adapter.ImportAdapter "$APP_ARGS"

exec "$JAVACMD" "$@"
